name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  frontend:
    name: Angular CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Angular dependencies
        working-directory: ./frontend/filemanage-frontend
        run: npm install

      - name: Run Angular Lint
        working-directory: ./frontend/filemanage-frontend
        run: npm run lint

      - name: Run Angular Tests
        working-directory: ./frontend/filemanage-frontend
        run: npm run test -- --watch=false --browsers=ChromeHeadless

  backend:
    name: Laravel CI
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: your_database
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'

      - name: Install Laravel dependencies
        working-directory: ./backend/filemanage-backend
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Configure Environment
        working-directory: ./backend/filemanage-backend
        run: |
          cp .env.example .env
          php artisan key:generate
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: your_database
          DB_USERNAME: root
          DB_PASSWORD: root

      - name: Run Laravel Lint (using PHP CodeSniffer)
        working-directory: ./backend/filemanage-backend
        run: |
          vendor/bin/phpcs --standard=PSR12 app

      - name: Run Laravel Tests
        working-directory: ./backend/filemanage-backend
        run: php artisan test
