name: Health & Performance Check

on:
  schedule:
    - cron: '*/30 * * * *'  # Runs every 30 minutes
  workflow_dispatch:       # Allow manual run from GitHub

jobs:
  healthcheck:
    runs-on: ubuntu-latest

    env:
      BACKEND_HEALTH_URL: https://yourdomain.com/api/health
      FRONTEND_URL: https://yourdomain.com


    steps:
      - name: üîí Check API (Backend Health)
        run: |
          echo "Checking API endpoint health..."
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -X POST "${{ secrets.BACKEND_TESTING_URL }}" \
            -H "Content-Type: application/json" \
            -d "{\"email\": \"${{ secrets.TESTING_KEY }}\", \"password\": \"${{ secrets.TESTING_PASS }}\"}")

          echo "Status Code: $RESPONSE"
          if [[ "$RESPONSE" != "200" ]]; then
            echo "‚ùå Test failed or backend down!"
            exit 1
          fi
          echo "‚úÖ Api Test succeeded. Backend is healthy."

      - name: ‚úÖ Validate Core Features via Claims
        run: |
          echo "Authenticating to check feature access..."

          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -X POST "${{ secrets.BACKEND_TESTING_URL }}" \
            -H "Content-Type: application/json" \
            -d "{\"email\": \"${{ secrets.TESTING_KEY }}\", \"password\": \"${{ secrets.TESTING_PASS }}\"}")

          echo "$RESPONSE" > response.json

          # Define expected features (friendly descriptions optional)
          EXPECTED_CLAIMS=(
            "ALL_DOCUMENTS_CREATE_DOCUMENT"
            "REMINDER_VIEW_REMINDERS"
            "USER_ASSIGN_USER_ROLE"
            "ROLE_VIEW_ROLES"
          )

          i=1
          for CLAIM in "${EXPECTED_CLAIMS[@]}"; do
            if grep -q "\"$CLAIM\"" response.json; then
              echo "‚úÖ Feature #$i is working"
            else
              echo "‚ùå Feature #$i is missing"
            fi
            ((i++))
          done


