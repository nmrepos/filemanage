name: Health & Performance Check

on:
  workflow_dispatch:       # Allow manual run from GitHub

jobs:
  healthcheck:
    runs-on: ubuntu-latest

    env:
      BACKEND_HEALTH_URL: https://yourdomain.com/api/health
      FRONTEND_URL: https://yourdomain.com


    steps:
      - name: üîí Check API (Backend Health)
        run: |
          echo "Checking API endpoint health..."
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -X POST "${{ secrets.BACKEND_TESTING_URL }}" \
            -H "Content-Type: application/json" \
            -d "{\"email\": \"${{ secrets.TESTING_KEY }}\", \"password\": \"${{ secrets.TESTING_PASS }}\"}")

          echo "Status Code: $RESPONSE"
          if [[ "$RESPONSE" != "200" ]]; then
            echo "‚ùå Test failed or backend down!"
            exit 1
          fi
          echo "‚úÖ Api Test succeeded. Backend is healthy."

      - name: ‚úÖ Validate Core Features via Claims
        run: |
          echo "Authenticating to check feature access..."

          RESPONSE=$(curl -s -X POST "${{ secrets.BACKEND_TESTING_URL }}" \
            -H "Content-Type: application/json" \
            -d "{\"email\": \"${{ secrets.TESTING_KEY }}\", \"password\": \"${{ secrets.TESTING_PASS }}\"}")

          echo "$RESPONSE" > response.json

          if ! echo "$RESPONSE" | grep -q '{'; then
            echo "‚ùå Response is not valid JSON:"
            cat response.json
            exit 1
          fi

          STATUS=$(jq -r '.status // empty' response.json)

          if [[ "$STATUS" != "success" ]]; then
            echo "‚ùå Login failed!"
            cat response.json
            exit 1
          fi

          echo "‚úÖ Login successful. Checking available features..."

          CLAIMS=$(jq -r '.claims[]' response.json)

          i=1
          for CLAIM in $CLAIMS; do
            echo "‚úÖ Feature : $CLAIM is working"
            ((i++))
          done

