name: CD Pipeline

on:
  push:
    branches:
      - main
      - 'feature/*'
  pull_request:
    branches:
      - main

jobs:
  deploy_frontend:
    name: Build & Deploy Angular Frontend to S3
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'


      - name: Install Dependencies & Build Angular App
        working-directory: ./frontend
        run: |
          npm install
          sed -i 's|\$API_URL|'"${{ secrets.API_URL }}"'|g' src/environments/environment.ts
          cat src/environments/environment.ts
          npm run build

      - name: List Angular Build Output Directory
        working-directory: ./frontend
        run: |
          ls
          pwd
          sudo chmod -R 777 ../backend/public/assets/angular/browser/browser/
          ls -la ../backend/public/assets/angular/browser/browser/


      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.S3_BUCKET_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SOURCE_DIR: '/home/runner/work/filemanage/filemanage/backend/public/assets/angular/browser/browser'

  deploy_backend:
    name: Deploy Laravel Backend to EC2
    runs-on: ubuntu-latest
    needs: deploy_frontend
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install Laravel Dependencies and Create Deployment Package
        working-directory: ./backend
        run: |
          composer install --prefer-dist --no-progress --no-suggest
          zip -r ../backend.zip .
          echo "Listing repository root after zipping:"
          ls -la ..

      - name: Set up SSH Key for SCP and SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Copy Deployment Package to EC2 using native scp
        run: |
          scp -o StrictHostKeyChecking=no backend.zip ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~

      - name: Deploy to EC2 via SSH
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd /var/www/html/filemanage
            sudo chmod -R 777 /var/www/html/filemanage
            rm -rf *
            unzip -o ~/backend.zip -d /var/www/html/filemanage
            cd /var/www/html/filemanage
            composer install --no-dev --optimize-autoloader


            cat > .env <<'EOL'
          APP_NAME=Laravel
          APP_ENV=local
          APP_KEY=base64:PcYQX76nLwRzjNN9EKmYYmywSEhBUwzOSvJshvZ18/0=
          APP_DEBUG=true
          APP_TIMEZONE=UTC
          APP_URL=http://localhost

          APP_LOCALE=en
          APP_FALLBACK_LOCALE=en
          APP_FAKER_LOCALE=en_US

          APP_MAINTENANCE_DRIVER=file
          # APP_MAINTENANCE_STORE=database

          PHP_CLI_SERVER_WORKERS=4

          BCRYPT_ROUNDS=12

          LOG_CHANNEL=stack
          LOG_STACK=single
          LOG_DEPRECATIONS_CHANNEL=null
          LOG_LEVEL=debug

          DB_CONNECTION=mysql
          DB_HOST=${{ secrets.DB_HOST }}
          DB_PORT=3306
          DB_DATABASE=${{ secrets.DB_DATABASE }}
          DB_USERNAME=${{ secrets.DB_USERNAME }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}


          SESSION_DRIVER=database
          SESSION_LIFETIME=120
          SESSION_ENCRYPT=false
          SESSION_PATH=/
          SESSION_DOMAIN=null

          BROADCAST_CONNECTION=log
          FILESYSTEM_DISK=local
          QUEUE_CONNECTION=database

          CACHE_STORE=database
          CACHE_PREFIX=

          MEMCACHED_HOST=127.0.0.1

          REDIS_CLIENT=phpredis
          REDIS_HOST=127.0.0.1
          REDIS_PASSWORD=null
          REDIS_PORT=6379

          MAIL_MAILER=log
          MAIL_SCHEME=null
          MAIL_HOST=127.0.0.1
          MAIL_PORT=2525
          MAIL_USERNAME=null
          MAIL_PASSWORD=null
          MAIL_FROM_ADDRESS="helloh@example.com"
          MAIL_FROM_NAME="${APP_NAME}"

          AWS_ACCESS_KEY_ID=
          AWS_SECRET_ACCESS_KEY=
          AWS_DEFAULT_REGION=us-east-1
          AWS_BUCKET=
          AWS_USE_PATH_STYLE_ENDPOINT=false

          VITE_APP_NAME="${APP_NAME}"


          EOL


            sudo chown apache:apache .env
            sudo chmod 664 .env
            sudo chown -R ec2-user:apache /var/www/html/filemanage
            sudo chmod -R 775 /var/www/html/filemanage
            sudo chmod 664 /var/www/html/filemanage/.env
            php artisan key:generate --force
            php artisan config:clear
            php artisan cache:clear
            sudo systemctl restart httpd
          EOF



