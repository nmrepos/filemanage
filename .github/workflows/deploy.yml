name: Deploy Entire Application

on:
  push:
    branches:
      - main
      - 'feature/*'
  pull_request:
    branches:
      - main

jobs:
  deploy_frontend:
    name: Build & Deploy Angular Frontend to S3
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies & Build Angular App
        working-directory: ./frontend
        run: |
          npm install
          npm run build --prod

      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.S3_BUCKET_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SOURCE_DIR: './frontend/dist/filemanage-frontend/browser' # Adjust the path if necessary

  deploy_backend:
    name: Deploy Laravel Backend to EC2
    runs-on: ubuntu-latest
    needs: deploy_frontend
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install Laravel Dependencies and Create Deployment Package
        working-directory: ./backend
        run: |
          composer install --prefer-dist --no-progress --no-suggest
          zip -r ../backend.zip .
          echo "Listing repository root after zipping:"
          ls -la ..

      - name: Set up SSH Key for SCP and SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Copy Deployment Package to EC2 using native scp
        run: |
          scp -o StrictHostKeyChecking=no backend.zip ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~

      - name: Deploy to EC2 via SSH
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd /var/www/html/filemanage
            rm -rf *
            unzip -o ~/backend.zip -d /var/www/html/filemanage
            cd /var/www/html/filemanage
            composer install --no-dev --optimize-autoloader
            php artisan migrate --force
            sudo chown apache:apache .env
            sudo chmod 664 .env
            sudo chown -R ec2-user:apache /var/www/html/filemanage
            sudo chmod -R 775 /var/www/html/filemanage/storage /var/www/html/filemanage/bootstrap/cache
            sudo chmod 664 /var/www/html/filemanage/.env
            php artisan key:generate --force
            php artisan config:clear
            php artisan cache:clear
            sudo systemctl restart httpd
          EOF



